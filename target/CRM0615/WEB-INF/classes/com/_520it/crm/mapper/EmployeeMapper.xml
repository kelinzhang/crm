<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.crm.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com._520it.crm.domain.Employee">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="reaLName" property="realname"/>
        <result column="password" property="password"/>
        <result column="tel" property="tel"/>
        <result column="email" property="email"/>
        <result column="inputTime" property="inputtime"/>
        <result column="state" property="state"/>
        <result column="admin" property="admin"/>
        <association property="dept" javaType="com._520it.crm.domain.Department">
            <id column="dept_id" property="id"/>
            <result column="dept_name" property="name"/>
        </association>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from employee
    where id = #{id}
  </delete>
    <insert id="insert" parameterType="com._520it.crm.domain.Employee" useGeneratedKeys="true" keyProperty="id">
    insert into employee (username, reaLName, password, 
      tel, email, dept_id, 
      inputTime, state, admin)
    values (#{username}, #{realname}, #{password}, 
      #{tel}, #{email}, #{dept.id},
      #{inputtime}, #{state}, #{admin})
  </insert>
    <update id="updateByPrimaryKey" parameterType="com._520it.crm.domain.Employee">
        update employee
        <set>
            username = #{username},
            reaLName = #{realname},
            tel = #{tel},
            email = #{email},
            dept_id = #{dept.id},
            <if test="password!=null">
                password = #{password},
            </if>
            <if test="inputtime!=null">
                inputTime = #{inputtime},
            </if>
            <if test="state!=null">
                state = #{state},
            </if>
            <if test="admin!=null">
                admin = #{admin}
            </if>
        </set>
        where id = #{id}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select id, username, reaLName, password, tel, email, dept_id, inputTime, state, admin
    from employee
    where id = #{id}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, username, reaLName, password, tel, email, dept_id, inputTime, state, admin
    from employee
  </select>
    <select id="getUser" resultType="com._520it.crm.domain.Employee">
    select id, username, reaLName, password, tel, email, inputTime, state, admin
    from employee
    where username=#{username} and password=#{password}
  </select>
    <update id="changeState">
        update employee set state = #{state} where id=#{id}
    </update>
    <sql id="condition_sql">
        <where>
          <if test="keyword!=null">
              and (emp.username like concat('%',#{keyword},'%') or emp.realname like concat('%',#{keyword},'%'))
          </if>
        </where>
    </sql>
    <select id="queryCount" resultType="java.lang.Long">
        SELECT COUNT(*) from employee emp
        <include refid="condition_sql"/>
    </select>
    <select id="queryList" resultMap="BaseResultMap">
        SELECT emp.id,emp.username,emp.realName,emp.password,emp.tel,emp.email,emp.inputTime,emp.state,emp.admin,
        dept.id as dept_id,dept.name as dept_name
        from employee emp left join department dept on (dept.id=emp.dept_id)
        <include refid="condition_sql"/>
        limit #{start},#{rows}
    </select>
    <insert id="insertRelation">
        insert into employee_role (role_id,employee_id) VALUES (#{roleId},#{empId})
    </insert>
    <delete id="deleteRelation">
        delete from employee_role where employee_id = #{empId}
    </delete>
</mapper>